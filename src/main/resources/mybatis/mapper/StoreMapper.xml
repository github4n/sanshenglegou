<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linjun.dao.StoreMapper">
  <resultMap id="BaseResultMap" type="com.linjun.model.Store">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="storeName" jdbcType="VARCHAR" property="storename" />
    <result column="storeAddress" jdbcType="VARCHAR" property="storeaddress" />
    <result column="storeType" jdbcType="VARCHAR" property="storetype" />
    <result column="storer" jdbcType="VARCHAR" property="storer" />
    <result column="stroelogo" jdbcType="VARCHAR" property="stroelogo" />
    <result column="scope" jdbcType="VARCHAR" property="scope" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="isAuth" jdbcType="TINYINT" property="isauth" />
    <result column="storeUserID" jdbcType="BIGINT" property="storeuserid" />
    <result column="passworld" jdbcType="VARCHAR" property="passworld" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, createTime, storeName, storeAddress, storeType, storer, stroelogo, scope, tel, 
    isAuth, storeUserID, passworld, introduce
  </sql>
  <select id="selectByExample" parameterType="com.linjun.model.StoreCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_store
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_store
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.linjun.model.StoreCriteria">
    delete from t_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.linjun.model.Store">
    insert into t_store (id, createTime, storeName, 
      storeAddress, storeType, storer, 
      stroelogo, scope, tel, 
      isAuth, storeUserID, passworld, 
      introduce)
    values (#{id,jdbcType=BIGINT}, #{createtime,jdbcType=TIMESTAMP}, #{storename,jdbcType=VARCHAR}, 
      #{storeaddress,jdbcType=VARCHAR}, #{storetype,jdbcType=VARCHAR}, #{storer,jdbcType=VARCHAR}, 
      #{stroelogo,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{isauth,jdbcType=TINYINT}, #{storeuserid,jdbcType=BIGINT}, #{passworld,jdbcType=VARCHAR}, 
      #{introduce,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.linjun.model.Store">
    insert into t_store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="storename != null">
        storeName,
      </if>
      <if test="storeaddress != null">
        storeAddress,
      </if>
      <if test="storetype != null">
        storeType,
      </if>
      <if test="storer != null">
        storer,
      </if>
      <if test="stroelogo != null">
        stroelogo,
      </if>
      <if test="scope != null">
        scope,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="isauth != null">
        isAuth,
      </if>
      <if test="storeuserid != null">
        storeUserID,
      </if>
      <if test="passworld != null">
        passworld,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="storename != null">
        #{storename,jdbcType=VARCHAR},
      </if>
      <if test="storeaddress != null">
        #{storeaddress,jdbcType=VARCHAR},
      </if>
      <if test="storetype != null">
        #{storetype,jdbcType=VARCHAR},
      </if>
      <if test="storer != null">
        #{storer,jdbcType=VARCHAR},
      </if>
      <if test="stroelogo != null">
        #{stroelogo,jdbcType=VARCHAR},
      </if>
      <if test="scope != null">
        #{scope,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="isauth != null">
        #{isauth,jdbcType=TINYINT},
      </if>
      <if test="storeuserid != null">
        #{storeuserid,jdbcType=BIGINT},
      </if>
      <if test="passworld != null">
        #{passworld,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linjun.model.StoreCriteria" resultType="java.lang.Long">
    select count(*) from t_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_store
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storename != null">
        storeName = #{record.storename,jdbcType=VARCHAR},
      </if>
      <if test="record.storeaddress != null">
        storeAddress = #{record.storeaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.storetype != null">
        storeType = #{record.storetype,jdbcType=VARCHAR},
      </if>
      <if test="record.storer != null">
        storer = #{record.storer,jdbcType=VARCHAR},
      </if>
      <if test="record.stroelogo != null">
        stroelogo = #{record.stroelogo,jdbcType=VARCHAR},
      </if>
      <if test="record.scope != null">
        scope = #{record.scope,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.isauth != null">
        isAuth = #{record.isauth,jdbcType=TINYINT},
      </if>
      <if test="record.storeuserid != null">
        storeUserID = #{record.storeuserid,jdbcType=BIGINT},
      </if>
      <if test="record.passworld != null">
        passworld = #{record.passworld,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_store
    set id = #{record.id,jdbcType=BIGINT},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      storeName = #{record.storename,jdbcType=VARCHAR},
      storeAddress = #{record.storeaddress,jdbcType=VARCHAR},
      storeType = #{record.storetype,jdbcType=VARCHAR},
      storer = #{record.storer,jdbcType=VARCHAR},
      stroelogo = #{record.stroelogo,jdbcType=VARCHAR},
      scope = #{record.scope,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      isAuth = #{record.isauth,jdbcType=TINYINT},
      storeUserID = #{record.storeuserid,jdbcType=BIGINT},
      passworld = #{record.passworld,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.linjun.model.Store">
    update t_store
    <set>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="storename != null">
        storeName = #{storename,jdbcType=VARCHAR},
      </if>
      <if test="storeaddress != null">
        storeAddress = #{storeaddress,jdbcType=VARCHAR},
      </if>
      <if test="storetype != null">
        storeType = #{storetype,jdbcType=VARCHAR},
      </if>
      <if test="storer != null">
        storer = #{storer,jdbcType=VARCHAR},
      </if>
      <if test="stroelogo != null">
        stroelogo = #{stroelogo,jdbcType=VARCHAR},
      </if>
      <if test="scope != null">
        scope = #{scope,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="isauth != null">
        isAuth = #{isauth,jdbcType=TINYINT},
      </if>
      <if test="storeuserid != null">
        storeUserID = #{storeuserid,jdbcType=BIGINT},
      </if>
      <if test="passworld != null">
        passworld = #{passworld,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linjun.model.Store">
    update t_store
    set createTime = #{createtime,jdbcType=TIMESTAMP},
      storeName = #{storename,jdbcType=VARCHAR},
      storeAddress = #{storeaddress,jdbcType=VARCHAR},
      storeType = #{storetype,jdbcType=VARCHAR},
      storer = #{storer,jdbcType=VARCHAR},
      stroelogo = #{stroelogo,jdbcType=VARCHAR},
      scope = #{scope,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      isAuth = #{isauth,jdbcType=TINYINT},
      storeUserID = #{storeuserid,jdbcType=BIGINT},
      passworld = #{passworld,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>