<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linjun.dao.CreditDetailMapper">
  <resultMap id="BaseResultMap" type="com.linjun.model.CreditDetail">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="creditID" jdbcType="BIGINT" property="creditid" />
    <result column="userID" jdbcType="BIGINT" property="userid" />
    <result column="addCredit" jdbcType="BIGINT" property="addcredit" />
    <result column="consumCredit" jdbcType="BIGINT" property="consumcredit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, creditID, userID, addCredit, consumCredit
  </sql>
  <select id="selectByExample" parameterType="com.linjun.model.CreditDetailCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_creditDetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.linjun.model.CreditDetailCriteria">
    delete from t_creditDetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.linjun.model.CreditDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_creditDetail (creditID, userID, addCredit, 
      consumCredit)
    values (#{creditid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{addcredit,jdbcType=BIGINT}, 
      #{consumcredit,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.linjun.model.CreditDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_creditDetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="creditid != null">
        creditID,
      </if>
      <if test="userid != null">
        userID,
      </if>
      <if test="addcredit != null">
        addCredit,
      </if>
      <if test="consumcredit != null">
        consumCredit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="creditid != null">
        #{creditid,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="addcredit != null">
        #{addcredit,jdbcType=BIGINT},
      </if>
      <if test="consumcredit != null">
        #{consumcredit,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linjun.model.CreditDetailCriteria" resultType="java.lang.Long">
    select count(*) from t_creditDetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_creditDetail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.creditid != null">
        creditID = #{record.creditid,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.addcredit != null">
        addCredit = #{record.addcredit,jdbcType=BIGINT},
      </if>
      <if test="record.consumcredit != null">
        consumCredit = #{record.consumcredit,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_creditDetail
    set id = #{record.id,jdbcType=BIGINT},
      creditID = #{record.creditid,jdbcType=BIGINT},
      userID = #{record.userid,jdbcType=BIGINT},
      addCredit = #{record.addcredit,jdbcType=BIGINT},
      consumCredit = #{record.consumcredit,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>