<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linjun.dao.OutcomeMapper">
  <resultMap id="BaseResultMap" type="com.linjun.model.Outcome">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="orderCode" jdbcType="BIGINT" property="ordercode" />
    <result column="payName" jdbcType="VARCHAR" property="payname" />
    <result column="payAcount" jdbcType="BIGINT" property="payacount" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="dopayName" jdbcType="VARCHAR" property="dopayname" />
    <result column="payTime" jdbcType="TIMESTAMP" property="paytime" />
    <result column="stutas" jdbcType="TINYINT" property="stutas" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orderCode, payName, payAcount, price, dopayName, payTime, stutas
  </sql>
  <select id="selectByExample" parameterType="com.linjun.model.OutcomeCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_outcome
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_outcome
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_outcome
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.linjun.model.OutcomeCriteria">
    delete from t_outcome
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.linjun.model.Outcome">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_outcome (orderCode, payName, payAcount, 
      price, dopayName, payTime, 
      stutas)
    values (#{ordercode,jdbcType=BIGINT}, #{payname,jdbcType=VARCHAR}, #{payacount,jdbcType=BIGINT}, 
      #{price,jdbcType=REAL}, #{dopayname,jdbcType=VARCHAR}, #{paytime,jdbcType=TIMESTAMP}, 
      #{stutas,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.linjun.model.Outcome">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_outcome
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ordercode != null">
        orderCode,
      </if>
      <if test="payname != null">
        payName,
      </if>
      <if test="payacount != null">
        payAcount,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="dopayname != null">
        dopayName,
      </if>
      <if test="paytime != null">
        payTime,
      </if>
      <if test="stutas != null">
        stutas,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ordercode != null">
        #{ordercode,jdbcType=BIGINT},
      </if>
      <if test="payname != null">
        #{payname,jdbcType=VARCHAR},
      </if>
      <if test="payacount != null">
        #{payacount,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="dopayname != null">
        #{dopayname,jdbcType=VARCHAR},
      </if>
      <if test="paytime != null">
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="stutas != null">
        #{stutas,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linjun.model.OutcomeCriteria" resultType="java.lang.Long">
    select count(*) from t_outcome
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_outcome
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.ordercode != null">
        orderCode = #{record.ordercode,jdbcType=BIGINT},
      </if>
      <if test="record.payname != null">
        payName = #{record.payname,jdbcType=VARCHAR},
      </if>
      <if test="record.payacount != null">
        payAcount = #{record.payacount,jdbcType=BIGINT},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.dopayname != null">
        dopayName = #{record.dopayname,jdbcType=VARCHAR},
      </if>
      <if test="record.paytime != null">
        payTime = #{record.paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stutas != null">
        stutas = #{record.stutas,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_outcome
    set id = #{record.id,jdbcType=BIGINT},
      orderCode = #{record.ordercode,jdbcType=BIGINT},
      payName = #{record.payname,jdbcType=VARCHAR},
      payAcount = #{record.payacount,jdbcType=BIGINT},
      price = #{record.price,jdbcType=REAL},
      dopayName = #{record.dopayname,jdbcType=VARCHAR},
      payTime = #{record.paytime,jdbcType=TIMESTAMP},
      stutas = #{record.stutas,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.linjun.model.Outcome">
    update t_outcome
    <set>
      <if test="ordercode != null">
        orderCode = #{ordercode,jdbcType=BIGINT},
      </if>
      <if test="payname != null">
        payName = #{payname,jdbcType=VARCHAR},
      </if>
      <if test="payacount != null">
        payAcount = #{payacount,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="dopayname != null">
        dopayName = #{dopayname,jdbcType=VARCHAR},
      </if>
      <if test="paytime != null">
        payTime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="stutas != null">
        stutas = #{stutas,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linjun.model.Outcome">
    update t_outcome
    set orderCode = #{ordercode,jdbcType=BIGINT},
      payName = #{payname,jdbcType=VARCHAR},
      payAcount = #{payacount,jdbcType=BIGINT},
      price = #{price,jdbcType=REAL},
      dopayName = #{dopayname,jdbcType=VARCHAR},
      payTime = #{paytime,jdbcType=TIMESTAMP},
      stutas = #{stutas,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>